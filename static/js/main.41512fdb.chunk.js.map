{"version":3,"sources":["Components/Users/ErrorPopUp.js","Components/Users/AddUser.js","Components/Users/UsersList.js","App.js","reportWebVitals.js","index.js"],"names":["ErrorPopUp","props","className","onClick","confirm","AddUser","useState","username","setUsername","age","setAge","isValid","setIsValid","onSubmit","event","preventDefault","trim","length","console","log","onAddUser","htmlFor","type","id","onChange","target","value","min","max","UsersList","users","map","user","name","App","usersList","setUsersList","userName","userAge","prevUsersList","Math","random","toString","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6SAaeA,EAXI,SAACC,GAChB,OACI,qBAAKC,UAAU,WAAf,SACI,sBAAKA,UAAU,aAAf,UACI,mBAAGA,UAAU,sBAAb,yCACA,wBAAQA,UAAU,UAAUC,QAASF,EAAMG,QAA3C,0BC0CDC,EA7CC,SAAAJ,GAEZ,MAAgCK,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAsBF,mBAAS,IAA/B,mBAAOG,EAAP,KAAYC,EAAZ,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KA0BA,OACI,sBAAKV,UAAU,WAAf,WACMS,GAAW,cAAC,EAAD,CAAYP,QANV,WACnBQ,GAAW,MAMP,uBAAMV,UAAU,gBAAgBW,SAnBjB,SAACC,GACpBA,EAAMC,iBACwB,IAA3BR,EAASS,OAAOC,QAAsC,IAAtBR,EAAIO,OAAOC,SAAiBR,EAAM,EACjEG,GAAW,IAGfM,QAAQC,IAAIZ,EAAUE,GACtBR,EAAMmB,UAAUb,EAAUE,GAC1BD,EAAY,IACZE,EAAO,MAUH,UACI,uBAAOW,QAAQ,WAAf,wBACA,uBAAOC,KAAK,OAAOC,GAAG,WAAWC,SA7BhB,SAAAV,GACzBN,EAAYM,EAAMW,OAAOC,QA4BgDA,MAAOnB,IACxE,uBAAOc,QAAQ,WAAf,mBACA,uBAAOC,KAAK,SAASC,GAAG,MAAMC,SA3BjB,SAAAV,GACrBJ,EAAOI,EAAMW,OAAOC,QA0B8CA,MAAOjB,EAAKkB,IAAI,IAAIC,IAAI,QAClF,uBAAON,KAAK,SAASC,GAAG,YAAYG,MAAM,oBCzB3CG,G,MAfG,SAAC5B,GACf,OACI,qBAAKC,UAAU,iBAAf,SACI,qBAAIA,UAAU,aAAd,UACKD,EAAM6B,MAAMb,OAAS,GAAI,mEACzBhB,EAAM6B,MAAMC,KAAI,SAAAC,GAAI,OACjB,qBAAkB9B,UAAU,aAA5B,UACK8B,EAAKC,KADV,KACkBD,EAAKvB,IADvB,gBAASuB,EAAKT,c,MCenBW,MAlBf,WAEE,MAAkC5B,mBAAS,IAA3C,mBAAO6B,EAAP,KAAkBC,EAAlB,KAQA,OACE,sBAAKlC,UAAU,MAAf,UACE,cAAC,EAAD,CAASkB,UARU,SAACiB,EAAUC,GAChCF,GAAa,SAACG,GACZ,MAAM,GAAN,mBAAWA,GAAX,CAA0B,CAACN,KAAMI,EAAU5B,IAAK6B,EAASf,GAAIiB,KAAKC,SAASC,oBAO3E,cAAC,EAAD,CAAWZ,MAAOK,QCNTQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.41512fdb.chunk.js","sourcesContent":["import '../UI/ErrorPopUp.css';\r\n\r\nconst ErrorPopUp = (props) => {\r\n    return (\r\n        <div className=\"error-bg\">\r\n            <div className=\"error-card\">\r\n                <p className=\"error-card__message\">Please enter a valid input!</p>\r\n                <button className=\"exitBtn\" onClick={props.confirm}>CANCEL</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ErrorPopUp;","import { useState } from 'react';\r\nimport '../UI/AddUser.css';\r\nimport ErrorPopUp from './ErrorPopUp';\r\n\r\nconst AddUser = props => {\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [age, setAge] = useState('');\r\n    const [isValid, setIsValid] = useState(true);\r\n\r\n    const usernameChangeHander = event => {\r\n        setUsername(event.target.value);\r\n    }\r\n\r\n    const ageChangeHandler = event => {\r\n        setAge(event.target.value);\r\n    }\r\n\r\n    const addUserHandler = (event) => {\r\n        event.preventDefault();\r\n        if(username.trim().length === 0 || age.trim().length === 0 || +age < 1){\r\n            setIsValid(false);\r\n            return;\r\n        }\r\n        console.log(username, age);\r\n        props.onAddUser(username, age);\r\n        setUsername('');\r\n        setAge('');\r\n    }\r\n\r\n    const confirmHandler = () => {\r\n        setIsValid(true);\r\n    };\r\n\r\n    return (\r\n        <div className=\"add-user\">\r\n            {!isValid && <ErrorPopUp confirm={confirmHandler}/>}\r\n            <form className='add-user-form' onSubmit={addUserHandler}>\r\n                <label htmlFor=\"username\">Username: </label>\r\n                <input type=\"text\" id=\"username\" onChange={usernameChangeHander} value={username}/>\r\n                <label htmlFor=\"username\">Age: </label>\r\n                <input type=\"number\" id=\"age\" onChange={ageChangeHandler} value={age} min=\"1\" max=\"200\"/>\r\n                <input type=\"submit\" id=\"submitBtn\" value=\"ADD USER\" />\r\n            </form>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default AddUser;","import '../UI/UsersList.css';\r\n\r\nconst UsersList = (props) => {\r\n    return (\r\n        <div className=\"users-list-div\">\r\n            <ul className=\"users-list\">\r\n                {props.users.length ? '': <p>Please enter something to display.</p>}\r\n                {props.users.map(user => (\r\n                    <li key={user.id} className=\"list-items\">\r\n                        {user.name} ({user.age} years old)\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>   \r\n    );\r\n}\r\n\r\nexport default UsersList;","import { useState } from 'react';\nimport AddUser from './Components/Users/AddUser'\nimport UsersList from './Components/Users/UsersList';\nimport './App.css';\n\nfunction App() {\n\n  const [usersList, setUsersList] = useState([]);\n\n  const addUserHandler = (userName, userAge) => {\n    setUsersList((prevUsersList) => {\n      return [...prevUsersList, {name: userName, age: userAge, id: Math.random().toString()}];\n    });\n  }\n\n  return (\n    <div className=\"app\">\n      <AddUser onAddUser={addUserHandler}/>\n      <UsersList users={usersList}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}